# EXAMPLE:
# git tag 0.7.12-rc.1
# git push origin main
# git push origin 0.7.12-rc.1
# .github/workflows/pre-release.yml
name: Build and Release (Pre-Release)

on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+'  # Pre-release tags

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Standard required steps for a Node.js package
      - name: Checkout repository to add to workspace
        uses: actions/checkout@v2

      - name: Setup Node.js version 16
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # # Caching to improve build speed
      - name: Enable caching for Node.js modules
        uses: actions/cache@v4
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      # Get dev dependencies for the package, including Gulp and Rollup
      - name: Install dev dependencies
        run: npm ci #--cache .npm --prefer-offline --ignore-scripts

      # Create a build using Gulp build script
      - name: Run Gulp build script
        run: npm run build

      # Insert "manifest", "download", and "version" for this release into the system.json manifest file
      # Doing it this way works for forks as well
      - name: Insert release-specific values in manifest file
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "system.json"
        env:
          id: ose
          title: "Old-School Essentials"
          version: ${{github.ref_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/download/${{github.ref_name}}/system.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.ref_name}}/system.zip

      # Replace "ose-dev" with "ose" in all files inside the dist folder
      - name: Replace 'ose-dev' with 'ose' in dist folder
        run: |
          find dist/ -type f -exec sed -i 's/ose-dev/ose/g' {} +

      # Create a zip file with all files required by the module to add to the release
      - name: Create zip file
        # Remember to update the below line when there's a change in repository files/directories
        run: zip -r ./system.zip system.json template.json dist/ assets/ LICENSE.OGL LICENSE.GPL LICENSE.OTHER.OSE_THIRD_PARTY_V1_5 AUTHORS

      - name: Prepare release notes
        id: prepare_notes
        run: |
          echo "## Old-School Essentials Pre-Release" > release_notes.txt
          echo "" >> release_notes.txt
          echo "This is a pre-release version of Old-School Essentials." >> release_notes.txt
          echo "Do not use this on your main play world. This release should only be used for testing and feedback." >> release_notes.txt
          echo "To install manually, use this URL:" >> release_notes.txt
          echo "https://github.com/${{github.repository}}/releases/download/${{github.ref_name}}/system.json" >> release_notes.txt

      - name: Create GitHub pre-release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: "Pre-Release ${{ github.ref_name }}"
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./system.json, ./system.zip"
          tag: ${{ github.ref_name }}
          bodyfile: release_notes.txt
